1. Write a query to display the names (first_name, last_name) using alias
name â€œFirst Name", "Last Name.

 select first_name as "first name" , last_name as "last name" from employees;
+------------+-----------+
| first name | last name |
+------------+-----------+
| Steven     | King      |
| Neena      | Kochhar   |
| Lex        | De Haan   |
| Alexander  | Hunold    |
| Bruce      | Ernst     |
| David      | Austin    |
| Valli      | Pataballa |
| Diana      | Lorentz   |
| Nancy      | Greenberg |
| Daniel     | Faviet    |
| Steven     | King      |
+------------+-----------+


2. Write a query to get unique department ID from employee table.

 select Distinct DEPARTMENT_ID from employees;
+---------------+
| DEPARTMENT_ID |
+---------------+
|            10 |
|            60 |
|            30 |
|            80 |
+---------------+


3. Write a query to get all employee details from the employee table order
by first name, descending
 select * from employees order by "frist name" desc;
+--------------+------------+----------+----------------+---------+------------+---------------+-------------+--------+------------+-----------+---------------+------------+
| phone_number | hire_date  | salary   | commission_pct | job_id  | manager_id | department_id | employee_id | gender | first_name | last_name | email         | max_salary |
+--------------+------------+----------+----------------+---------+------------+---------------+-------------+--------+------------+-----------+---------------+------------+
| 5151234567   | 1987-06-17 | 26400.00 |            0.1 | AD_PRES |        200 |            10 |         100 | NULL   | Steven     | King      | not available |       NULL |
| 515.123.4568 | 1987-06-18 | 18700.00 |            0.1 | AD_VP   |        200 |            10 |         101 | NULL   | Neena      | Kochhar   | not available |       NULL |
| 515.123.4569 | 1987-06-19 | 18700.00 |            0.1 | AD_VP   |        200 |            10 |         102 | NULL   | Lex        | De Haan   | not available |       NULL |
| 590.423.4569 | 1987-06-20 |  9900.00 |            0.1 | IT_PROG |        103 |            60 |         103 | NULL   | Alexander  | Hunold    | not available |       NULL |
| 590.423.4567 | 1987-06-21 |  6600.00 |            0.1 | IT_PROG |        103 |            60 |         104 | NULL   | Bruce      | Ernst     | not available |       NULL |
| 590.423.4569 | 1987-06-22 |  5280.00 |            0.1 | IT_PROG |        103 |            60 |         105 | NULL   | David      | Austin    | not available |       NULL |
| 590.423.4569 | 1987-06-23 |  4620.00 |            0.1 | IT_PROG |        103 |            60 |         106 | NULL   | Valli      | Pataballa | not available |       NULL |
| 590.423.4560 | 1987-06-23 |  4620.00 |            0.1 | IT_PROG |        114 |            30 |         107 | NULL   | Diana      | Lorentz   | not available |       NULL |
| 515.423.5567 | 1987-06-24 | 13200.00 |            0.1 | IT_PROG |        145 |            80 |         108 | NULL   | Nancy      | Greenberg | not available |       NULL |
| 515.124.4169 | 1987-06-26 |  9900.00 |            0.1 | SA_MAN  |        145 |            80 |         109 | NULL   | Daniel     | Faviet    | not available |       NULL |
| 515.123.4567 | 1987-06-17 | 26400.00 |            0.1 | AD_PRES |        200 |            10 |         111 | NULL   | Steven     | King      | not available |       NULL |
+--------------+------------+----------+----------------+---------+------------+---------------+-------------+--------+------------+-----------+---------------+------------+
4. Write a query to get the names (first_name, last_name), salary, PF of all
the employees (PF is calculated as 15% of salary).

 SELECT
    ->     first_name,
    ->     last_name,
    ->     salary,
    ->     salary * 0.15 PF
    -> FROM employees;
+------------+-----------+----------+-----------+
| first_name | last_name | salary   | PF        |
+------------+-----------+----------+-----------+
| Steven     | King      | 26400.00 | 3960.0000 |
| Neena      | Kochhar   | 18700.00 | 2805.0000 |
| Lex        | De Haan   | 18700.00 | 2805.0000 |
| Alexander  | Hunold    |  9900.00 | 1485.0000 |
| Bruce      | Ernst     |  6600.00 |  990.0000 |
| David      | Austin    |  5280.00 |  792.0000 |
| Valli      | Pataballa |  4620.00 |  693.0000 |
| Diana      | Lorentz   |  4620.00 |  693.0000 |
| Nancy      | Greenberg | 13200.00 | 1980.0000 |
| Daniel     | Faviet    |  9900.00 | 1485.0000 |
| Steven     | King      | 26400.00 | 3960.0000 |
+------------+-----------+----------+-----------+

5. Write a query to get the employee ID, names (first_name, last_name),
salary in ascending order of salary.

 select first_name,last_name, salary from employees
    -> order by salary desc;
+------------+-----------+----------+
| first_name | last_name | salary   |
+------------+-----------+----------+
| Steven     | King      | 26400.00 |
| Steven     | King      | 26400.00 |
| Neena      | Kochhar   | 18700.00 |
| Lex        | De Haan   | 18700.00 |
| Nancy      | Greenberg | 13200.00 |
| Alexander  | Hunold    |  9900.00 |
| Daniel     | Faviet    |  9900.00 |
| Bruce      | Ernst     |  6600.00 |
| David      | Austin    |  5280.00 |
| Valli      | Pataballa |  4620.00 |
| Diana      | Lorentz   |  4620.00 |
+------------+-----------+----------+

6. Write a query to get the total salaries payable to employees.

select sum(salary) from employees;
+-------------+
| sum(salary) |
+-------------+
|   144320.00 |
+-------------+


7. Write a query to get the maximum and minimum salary from employees
table.

 select min(salary),max(salary)from employees
    -> group by salary;
+-------------+-------------+
| min(salary) | max(salary) |
+-------------+-------------+
|    26400.00 |    26400.00 |
|    18700.00 |    18700.00 |
|     9900.00 |     9900.00 |
|     6600.00 |     6600.00 |
|     5280.00 |     5280.00 |
|     4620.00 |     4620.00 |
|    13200.00 |    13200.00 |
+-------------+-------------+


8. Write a query to get the average salary and number of employees in the
employees table.


mysql> select avg(salary),count(*) from employees;
+--------------+----------+
| avg(salary)  | count(*) |
+--------------+----------+
| 13120.000000 |       11 |
+--------------+----------+


9. Write a query to get the number of employees working with the
company's

mysql> select count(*) from employees;
+----------+
| count(*) |
+----------+
|       11 |
+----------+

10.Write a query to get the number of jobs available in the employees table


select count (DISTINCT job_id) from employees;
+------------------------+
| COUNT(DISTINCT job_id) |
+------------------------+
|                      4 |
+------------------------+


11.Write a query to select first 10 records from a table.

mysql> select * from employees limit 10;
+--------------+------------+----------+----------------+---------+------------+---------------+-------------+--------+------------+-----------+---------------+------------+
| phone_number | hire_date  | salary   | commission_pct | job_id  | manager_id | department_id | employee_id | gender | first_name | last_name | email         | max_salary |
+--------------+------------+----------+----------------+---------+------------+---------------+-------------+--------+------------+-----------+---------------+------------+
| 5151234567   | 1987-06-17 | 26400.00 |            0.1 | AD_PRES |        200 |            10 |         100 | NULL   | Steven     | King      | not available |       NULL |
| 515.123.4568 | 1987-06-18 | 18700.00 |            0.1 | AD_VP   |        200 |            10 |         101 | NULL   | Neena      | Kochhar   | not available |       NULL |
| 515.123.4569 | 1987-06-19 | 18700.00 |            0.1 | AD_VP   |        200 |            10 |         102 | NULL   | Lex        | De Haan   | not available |       NULL |
| 590.423.4569 | 1987-06-20 |  9900.00 |            0.1 | IT_PROG |        103 |            60 |         103 | NULL   | Alexander  | Hunold    | not available |       NULL |
| 590.423.4567 | 1987-06-21 |  6600.00 |            0.1 | IT_PROG |        103 |            60 |         104 | NULL   | Bruce      | Ernst     | not available |       NULL |
| 590.423.4569 | 1987-06-22 |  5280.00 |            0.1 | IT_PROG |        103 |            60 |         105 | NULL   | David      | Austin    | not available |       NULL |
| 590.423.4569 | 1987-06-23 |  4620.00 |            0.1 | IT_PROG |        103 |            60 |         106 | NULL   | Valli      | Pataballa | not available |       NULL |
| 590.423.4560 | 1987-06-23 |  4620.00 |            0.1 | IT_PROG |        114 |            30 |         107 | NULL   | Diana      | Lorentz   | not available |       NULL |
| 515.423.5567 | 1987-06-24 | 13200.00 |            0.1 | IT_PROG |        145 |            80 |         108 | NULL   | Nancy      | Greenberg | not available |       NULL |
| 515.124.4169 | 1987-06-26 |  9900.00 |            0.1 | SA_MAN  |        145 |            80 |         109 | NULL   | Daniel     | Faviet    | not available |       NULL |
+--------------+------------+----------+----------------+---------+------------+---------------+-------------+--------+------------+-----------+---------------+------------


12.Write a query to display the name (first_name, last_name) and salary for
all employees whose salary is not in the range $10,000 through $15,000

 select first_name,last_name,salary from employees
    -> where salary between 10000 and 15000;
+------------+-----------+----------+
| first_name | last_name | salary   |
+------------+-----------+----------+
| Nancy      | Greenberg | 13200.00 |
+------------+-----------+----------+


13.Write a query to display the name (first_name, last_name) and
department ID of all employees in departments 30 or 100 in ascending
order.

 select first_name,last_name,salary from employees
    -> where department_id in(30,100)
    -> order by department_id desc;
+------------+-----------+---------+
| first_name | last_name | salary  |
+------------+-----------+---------+
| Diana      | Lorentz   | 4620.00 |
+------------+-----------+---------+


14.Write a query to display the name (first_name, last_name) and salary for
all employees whose salary is not in the range $10,000 through $15,000
and are in department 30 or 100.

 select  first_name,last_name,salary from employees
    -> where salary not between 10000 and 15000
    -> and department_id in (30,100);
+------------+-----------+---------+
| first_name | last_name | salary  |
+------------+-----------+---------+
| Diana      | Lorentz   | 4620.00 |
+------------+-----------+---------+
 
15.Write a query to display the name (first_name, last_name) and hire date
for all employees who were hired in 1987.

select first_name,last_name,hire_date from employees
    -> where  year(hire_date)=1987;
+------------+-----------+------------+
| first_name | last_name | hire_date  |
+------------+-----------+------------+
| Steven     | King      | 1987-06-17 |
| Neena      | Kochhar   | 1987-06-18 |
| Lex        | De Haan   | 1987-06-19 |
| Alexander  | Hunold    | 1987-06-20 |
| Bruce      | Ernst     | 1987-06-21 |
| David      | Austin    | 1987-06-22 |
| Valli      | Pataballa | 1987-06-23 |
| Diana      | Lorentz   | 1987-06-23 |
| Nancy      | Greenberg | 1987-06-24 |
| Daniel     | Faviet    | 1987-06-26 |
| Steven     | King      | 1987-06-17 |
+------------+-----------+------------+

16.Write a query to display the first_name of all employees who have both
"b" and "c" in their first name
 select first_name from employees
    -> where first_name like 'b%'
    -> and first_name like 'a%';


17.Write a query to display the last name, job, and salary for all employees
whose job is that of a Programmer or a Shipping Clerk, and whose salary
is not equal to $4,500, $10,000, or $15,000.
 
select last_name,salary from employees
    -> where job_id in('programmer','shipping clerk')
    -> and salary not in(4500,10000,15000);

18.Write a query to display the last name of employees whose names have
exactly 6 characters.

select last_name from employees
    -> where length (last_name) = 6;
+-----------+
| last_name |
+-----------+
| Hunold    |
| Austin    |
| Faviet    |
+-----------+

19.Write a query to display the last name of employees having 'e' as the third
character.

 select last_name from employees
    -> where last_name like  "%E__";
+-----------+
| last_name |
+-----------+
| Greenberg |
+-----------+

20.Write a query to display the jobs/designations available in the employees
table.

 select distinct job_id from employees;
+---------+
| job_id  |
+---------+
| AD_PRES |
| AD_VP   |
| IT_PROG |
| SA_MAN  |
+---------+

21.Write a query to select all record from employees where last name in
'BLAKE', 'SCOTT', 'KING' and 'FORD'


> select * from employees
    -> where last_name in ('BLAKE' , 'SCOTT' , 'KING' , 'FORD');
+--------------+------------+----------+----------------+---------+------------+---------------+-------------+--------+------------+-----------+---------------+------------+
| phone_number | hire_date  | salary   | commission_pct | job_id  | manager_id | department_id | employee_id | gender | first_name | last_name | email         | max_salary |
+--------------+------------+----------+----------------+---------+------------+---------------+-------------+--------+------------+-----------+---------------+------------+
| 5151234567   | 1987-06-17 | 26400.00 |            0.1 | AD_PRES |        200 |            10 |         100 | NULL   | Steven     | King      | not available |       NULL |
| 515.123.4567 | 1987-06-17 | 26400.00 |            0.1 | AD_PRES |        200 |            10 |         111 | NULL   | Steven     | King      | not available |       NULL |
+--------------+------------+----------+----------------+---------+------------+---------------+-------------+--------+------------+-----------+---------------+------------+


 create table AIRCRAFT
    -> (
    -> Aircraft_id int primary key,
    -> model varchar(30),
    -> capacity varchar(20)
    -> );
Query OK, 0 rows affected (0.27 sec)

mysql> desc aircraft;
+-------------+-------------+------+-----+---------+-------+
| Field       | Type        | Null | Key | Default | Extra |
+-------------+-------------+------+-----+---------+-------+
| Aircraft_id | int         | NO   | PRI | NULL    |       |
| model       | varchar(30) | YES  |     | NULL    |       |
| capacity    | varchar(20) | YES  |     | NULL    |       |
+-------------+-------------+------+-----+---------+-------+


 create table route
    -> (
    -> route_id int primary key,
    -> distance int,
    -> destination varchar(30)
    -> );
Query OK, 0 rows affected (0.11 sec)

mysql> desc route;
+-------------+-------------+------+-----+---------+-------+
| Field       | Type        | Null | Key | Default | Extra |
+-------------+-------------+------+-----+---------+-------+
| route_id    | int         | NO   | PRI | NULL    |       |
| distance    | int         | YES  |     | NULL    |       |
| destination | varchar(30) | YES  |     | NULL    |       |
+-------------+-------------+------+-----+---------+-------+
3 rows in set (0.03 sec)



 CREATE TABLE flight (
    ->     flight_id INT PRIMARY KEY,
    ->     arrival_id INT,
    ->     route_id INT,
    ->     airport_id INT,
    ->     aircraft_id INT,
    ->     FOREIGN KEY (route_id) REFERENCES route(route_id),
    ->     FOREIGN KEY (aircraft_id) REFERENCES aircraft(aircraft_id),
    ->     FOREIGN KEY (airport_id) REFERENCES airport(airport_code)
    -> );
Query OK, 0 rows affected (0.26 sec)

mysql> desc flight;
+-------------+------+------+-----+---------+-------+
| Field       | Type | Null | Key | Default | Extra |
+-------------+------+------+-----+---------+-------+
| flight_id   | int  | NO   | PRI | NULL    |       |
| arrival_id  | int  | YES  |     | NULL    |       |
| route_id    | int  | YES  | MUL | NULL    |       |
| airport_id  | int  | YES  | MUL | NULL    |       |
| aircraft_id | int  | YES  | MUL | NULL    |       |
+-------------+------+------+-----+---------+-------+
5 rows in set (0.05 sec)






 create table Itinerary
    -> (
    -> Itinerary_id int primary key,
    -> sheduled_arrival int ,
    -> total_flight int,
    -> FLIGHT_ID INT,
    -> FOREIGN KEY (FLIGHT_ID) REFERENCES FLIGHT(FLIGHT_ID
    -> )
    -> );
Query OK, 0 rows affected (0.16 sec)

mysql> DESC FLIGHT;
+-------------+------+------+-----+---------+-------+
| Field       | Type | Null | Key | Default | Extra |
+-------------+------+------+-----+---------+-------+
| flight_id   | int  | NO   | PRI | NULL    |       |
| arrival_id  | int  | YES  |     | NULL    |       |
| route_id    | int  | YES  | MUL | NULL    |       |
| airport_id  | int  | YES  | MUL | NULL    |       |
| aircraft_id | int  | YES  | MUL | NULL    |       |
+-------------+------+------+-----+---------+-------+




CREATE TABLE crew (
    ->     crew_id INT PRIMARY KEY,
    ->     role ENUM('PILOT','ATTENDANT'),
    ->     name VARCHAR(20),
    ->     contact_no VARCHAR(15)
    -> );
Query OK, 0 rows affected (0.24 sec)

mysql> DESC CREW;
+------------+---------------------------+------+-----+---------+-------+
| Field      | Type                      | Null | Key | Default | Extra |
+------------+---------------------------+------+-----+---------+-------+
| crew_id    | int                       | NO   | PRI | NULL    |       |
| role       | enum('PILOT','ATTENDANT') | YES  |     | NULL    |       |
| name       | varchar(20)               | YES  |     | NULL    |       |
| contact_no | varchar(15)               | YES  |     | NULL    |       |
+------------+---------------------------+------+-----+---------+-------+





CREATE TABLE crew_assignment (
    ->     assign_id INT PRIMARY KEY,
    ->     itinerary_id INT,
    ->     crew_id INT,
    ->     FOREIGN KEY (itinerary_id) REFERENCES itinerary(itinerary_id),
    ->     FOREIGN KEY (crew_id) REFERENCES crew(crew_id)
    -> );
Query OK, 0 rows affected (0.27 sec)

mysql> DESC crew_assignment;
+--------------+------+------+-----+---------+-------+
| Field        | Type | Null | Key | Default | Extra |
+--------------+------+------+-----+---------+-------+
| assign_id    | int  | NO   | PRI | NULL    |       |
| itinerary_id | int  | YES  | MUL | NULL    |       |
| crew_id      | int  | YES  | MUL | NULL    |       |
+--------------+------+------+-----+---------+-------+


 CREATE TABLE ITINERARY
    -> (
    -> ITINERARY_ID INT PRIMARY KEY,
    -> SCHEDULED_ARRIVAL VARCHAR(20),
    -> TOTAL_FLIGHT INT,
    -> FOREIGN KEY(FLIGHT_ID) REFERENCES FLIGHT (FLIGHT_ID)
    -> );
